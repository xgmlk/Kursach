'use strict';
//директива обозначает что код пишется на стандарте US6



//переменная - название переменной - присвоенное значение переменной
//переменная var видна в коде даже до ее обьявления
var leftBorderWidth = 1;
let second = 2;
//переменную const нельзя поменять т.к. это константа
const pi = 3.14;


var scobki; {
    //переменная let занесенная в фигурные скобки будет видна только внутри этих скобок
let Vnutri = 2;
//правильно выполнение
console.log(Vnutri);
}
//ошибка
// console.log(Vnutri);


//типы данных
//число. при делении на ноль можно получить infinity. 
// операция которая не подлежить математической логике даст значение not a number (NaN)
//умножить или разделить на строку
let number = 5;
//infinity
console.log(4/0);
//not a number (NaN)
console.log('hi' * 5);
//строка
let string = "Hi";
//символ используется редко
let sym = Symbol();
//логический тип данных - значение да = true, нет = false.
let boolean = true;
//когда чего то в коде не существует
null;
//объект без значения
undefined;
//структура для хранения любых данных
let obj = {};



//объект с различными типами данных.. данные человека
let person = {
    name: "John",
    age: 25,
    isMarried: false
};

//достаем значение name из оъекта person
//получаем в консоли name объекта John
//1 способ получить свойство
console.log(person.name);
//2 способ ковычки обязательно
console.log(person["name"]);

//массив . может собержать не только строки для хранения люых типов данных
let arr = ['1.png','2.jpg','3.bmp'];
//получаем 2 номер из массива, отсчет идет с нуля
console.log(arr[2])


//общение с пользвателем
//вывод в консоль
console.log();
//вывод на экран при открытии сайта
alert();
//практически тоже что и alert только с подтверждением или отрицанием (true или false)
confirm();
// тут можно вписать свое значение выводистся строкой
prompt();
// переменная со значением prompt / первое в фигурных скобках - вопрос/ второе ответ по умолчанию
let answer = prompt ("есть ли вам 18?", "");
//typeof - оператор для определения типа данных(строки,числа и т.д.)
// если использовать значение null в операторе typeof получится объект(object) это оффициальная ошибка в javacript
console.log(typeof(answer));

//операторы - сложение, вычитание, деление, умножение
// сложение двух строк
console.log( "arr" + " - object");
// сложение строки и числа все рано получится строка
console.log( 4 + " - object");
//таким образом можно получить тип данных number если перед значением promp поставить плюс
let operator = +prompt('есть ли вам 18', '');
// также можно проводить такие операции здесь
console.log( 4 + +" - object");
//икоремент и декоремент
let incr = 10,
    decr = 10;
//увеличиваем значение incr и уменьшаем decr на одну еденицу
incr ++;
decr --;
// выводим в консоль и получаем incr = 10 + 1, decr = 10 - 1
console.log(incr);
console.log(decr);
// перефиксная форма применения (сразу же применяются инкоремент и декоремент)
console.log(++incr);
console.log(--decr);
// постфиксная форма после того как мы вывели 10 и 10 в консоль, они изменились на 11 и 9
console.log(incr++);
console.log(decr--);
//проверяем 
console.log(incr);
console.log(decr);

// если операторы больше,меньше, больше или равен (>)  (<)  (>=)
// оператор % - возвращает остаток от деления двух чисел
// остаток 1
console.log(5%2);
//оператор равенства
// если равно один раз (=) - это присваивание
// два раза (==) - проверка на равенство
// три (===) - строгая проверка по типам данных

//разные типы данных , но в консоли будет true т.к. в обоих случаях  стоит значение 2
console.log('2' == 2);
//здесь в консоли будет false так как одина двойка это тип данных строка("2")
//а второй число (2)
console.log('2' === 2);
// логические операторы (и , или)
let isChecked = true,
    isClose = true;
//логический оператор (и)
// обазначения являются true и по этому в консоль мы также получим true
console.log(isChecked && isClose);
//получаем false в консоли так как одна из переменных равна false  а другя true
let isChecked1 = true,
    isClose1 = false;
    console.log(isChecked1 && isClose1);
// оператор (и)(&&) дает true только если оба или несколько (все) значения(аргументы) являются правдивыми (true)

//оператор (или) (||) дает true даже если только один из аргументов(значений) является правдивым
console.log(isChecked || isClose);
// тоесть false можно получить только если оба аргумента равны false

// если поставить перед переменной восклицательный знак (!) (оператор отрицания) значение переменной обратится в противо положное
console.log(isChecked || !isClose);


//порядок выпонения операторов нужно знать!

//команды Git

//для создания папки репозитория Git
//git init

//для создания конфига пользователся 
//git config --local(или global) user.name "Dima"
//git config --local user.email "(email)"

//добавить все файлы во второе состояние (состояние следения гитом за файлами)
//git add -A
//что бы добавить конкретное расширение файлов вместо -А *html например
//что бы конкретный файл просто вписать его название html.html

// git status посмотреть статус репозитория git


// чтобы перевести файлы из  второго состояния в третье
//git commit -a -m (пояснение что это за коммит)

//